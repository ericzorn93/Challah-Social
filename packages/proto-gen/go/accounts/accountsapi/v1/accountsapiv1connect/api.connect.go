// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: accounts/accountsapi/v1/api.proto

package accountsapiv1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	http "net/http"
	v1 "github.com/ericzorn93/career-cue/proto-gen/go/accounts/accountsapi/v1"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// AccountsAPIV1Name is the fully-qualified name of the AccountsAPIV1 service.
	AccountsAPIV1Name = "accounts.accountsapi.v1.AccountsAPIV1"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// AccountsAPIV1GetPersonProcedure is the fully-qualified name of the AccountsAPIV1's GetPerson RPC.
	AccountsAPIV1GetPersonProcedure = "/accounts.accountsapi.v1.AccountsAPIV1/GetPerson"
)

// AccountsAPIV1Client is a client for the accounts.accountsapi.v1.AccountsAPIV1 service.
type AccountsAPIV1Client interface {
	GetPerson(context.Context, *connect_go.Request[v1.Empty]) (*connect_go.Response[v1.Person], error)
}

// NewAccountsAPIV1Client constructs a client for the accounts.accountsapi.v1.AccountsAPIV1 service.
// By default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped
// responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewAccountsAPIV1Client(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) AccountsAPIV1Client {
	baseURL = strings.TrimRight(baseURL, "/")
	return &accountsAPIV1Client{
		getPerson: connect_go.NewClient[v1.Empty, v1.Person](
			httpClient,
			baseURL+AccountsAPIV1GetPersonProcedure,
			opts...,
		),
	}
}

// accountsAPIV1Client implements AccountsAPIV1Client.
type accountsAPIV1Client struct {
	getPerson *connect_go.Client[v1.Empty, v1.Person]
}

// GetPerson calls accounts.accountsapi.v1.AccountsAPIV1.GetPerson.
func (c *accountsAPIV1Client) GetPerson(ctx context.Context, req *connect_go.Request[v1.Empty]) (*connect_go.Response[v1.Person], error) {
	return c.getPerson.CallUnary(ctx, req)
}

// AccountsAPIV1Handler is an implementation of the accounts.accountsapi.v1.AccountsAPIV1 service.
type AccountsAPIV1Handler interface {
	GetPerson(context.Context, *connect_go.Request[v1.Empty]) (*connect_go.Response[v1.Person], error)
}

// NewAccountsAPIV1Handler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewAccountsAPIV1Handler(svc AccountsAPIV1Handler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle(AccountsAPIV1GetPersonProcedure, connect_go.NewUnaryHandler(
		AccountsAPIV1GetPersonProcedure,
		svc.GetPerson,
		opts...,
	))
	return "/accounts.accountsapi.v1.AccountsAPIV1/", mux
}

// UnimplementedAccountsAPIV1Handler returns CodeUnimplemented from all methods.
type UnimplementedAccountsAPIV1Handler struct{}

func (UnimplementedAccountsAPIV1Handler) GetPerson(context.Context, *connect_go.Request[v1.Empty]) (*connect_go.Response[v1.Person], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("accounts.accountsapi.v1.AccountsAPIV1.GetPerson is not implemented"))
}
