schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
  mutation: Mutation
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

"""The Account type represents a user account in the system."""
type Account {
  """The createdAt time of the account"""
  createdAt: Time!

  """The email address of the account"""
  emailAddress: String!

  """The unique identifier for the account"""
  id: UUID!

  """The updatedAt time of the account"""
  updatedAt: Time!
}

type Mutation {
  empty: Boolean! @join__field(graph: ACCOUNTS)
}

type Query {
  empty: Boolean! @join__field(graph: ACCOUNTS)

  """Viewer is the root query object for the user"""
  viewer: Viewer @join__field(graph: ACCOUNTS)
}

scalar Time

scalar UUID

"""Viewer is the root query object for the user"""
type Viewer {
  """Get an account by its unique identifier"""
  account(
    """The unique identifier of the account"""
    commonID: UUID!
  ): Account @join__field(graph: ACCOUNTS)
  empty: Boolean!
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  ACCOUNTS @join__graph(name: "accounts" url: "http://accounts-graphql:3000/graphql")
}
